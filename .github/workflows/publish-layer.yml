name: Build and Publish Lambda Layer

on:
  push:
  schedule:
    # Run every week on Sunday at midnight
    - cron: '0 0 * * 0'
  workflow_dispatch:
jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    container:
      image: amazonlinux:latest
    steps:
      - name: Install node,jq.zip, cli
        run: yum -y install tar nodejs jq zip awscli

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build Lambda Layer
        run: |
          mkdir nodejs
          cd nodejs
          npm init -y
          npm i @napi-rs/canvas
          cd ../
          zip -r layer.zip nodejs
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Publish Lambda Layer
        id: publish-layer
        run: |
          for region in $(echo $AWS_REGIONS | tr ',' ' '); do
            echo "Publishing Lambda layer to region $region..."
            result=$(aws lambda publish-layer-version --region $region --layer-name $LAYER_NAME --description "Lambda layer for @napi-rs/canvas" --compatible-runtimes $COMPATIBLE_RUNTIMES --zip-file "fileb://layer.zip" --query "{LayerVersionArn: LayerVersionArn, Version: Version}" --output json)
            ARN=$(echo $result | jq -r '.LayerVersionArn')
            VERSION=$(echo $result | jq -r '.Version')
            echo "Published version $VERSION of Lambda layer to region $region with ARN $ARN"
            aws lambda add-layer-version-permission --region $region --layer-name $LAYER_NAME --version-number $VERSION --statement-id "public-access" --action lambda:GetLayerVersion --principal "*"
          done
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGIONS: "us-east-1, us-west-2, eu-west-1, ap-northeast-1, ap-southeast-1, ap-southeast-2, eu-central-1, sa-east-1"
          LAYER_NAME: "napi-rs-canvas"
          COMPATIBLE_RUNTIMES: "nodejs14.x nodejs16.x nodejs18.x"
